package com.alpriest.energystats.ui.settings

import androidx.compose.animation.AnimatedVisibility
import androidx.compose.animation.expandVertically
import androidx.compose.animation.shrinkVertically
import androidx.compose.foundation.layout.Column
import androidx.compose.material.Text
import androidx.compose.runtime.Composable
import androidx.compose.runtime.mutableStateOf
import androidx.compose.runtime.saveable.rememberSaveable
import androidx.compose.ui.Modifier
import androidx.compose.ui.res.stringResource
import androidx.compose.ui.tooling.preview.Preview
import com.alpriest.energystats.R
import com.alpriest.energystats.preview.FakeConfigManager
import com.alpriest.energystats.stores.ConfigManaging

@Composable
fun SolarStringsSettingsView(config: ConfigManaging, modifier: Modifier = Modifier) {
    val showSeparateStringsOnPowerFlowState = rememberSaveable { mutableStateOf(config.showSeparateStringsOnPowerFlow) }
    val pv1 = rememberSaveable { mutableStateOf(config.enabledPowerFlowStrings.contains(PowerFlowStrings.PV1)) }
    val pv2 = rememberSaveable { mutableStateOf(config.enabledPowerFlowStrings.contains(PowerFlowStrings.PV2)) }
    val pv3 = rememberSaveable { mutableStateOf(config.enabledPowerFlowStrings.contains(PowerFlowStrings.PV3)) }
    val pv4 = rememberSaveable { mutableStateOf(config.enabledPowerFlowStrings.contains(PowerFlowStrings.PV4)) }

    SettingsColumnWithChild(
        modifier = modifier
    ) {
        SettingsCheckbox(
            title = stringResource(R.string.show_pv_power_by_strings),
            state = showSeparateStringsOnPowerFlowState,
            onUpdate = { config.showSeparateStringsOnPowerFlow = it }
        )

        AnimatedVisibility(
            visible = showSeparateStringsOnPowerFlowState.value,
            enter = expandVertically(),
            exit = shrinkVertically()
        ) {
            Column {
                SettingsCheckbox(
                    title = "PV1",
                    state = pv1,
                    onUpdate = update(config, PowerFlowStrings.PV1)
                )

                SettingsCheckbox(
                    title = "PV2",
                    state = pv2,
                    onUpdate = update(config, PowerFlowStrings.PV2)
                )

                SettingsCheckbox(
                    title = "PV3",
                    state = pv3,
                    onUpdate = update(config, PowerFlowStrings.PV3)
                )

                SettingsCheckbox(
                    title = "PV4",
                    state = pv4,
                    onUpdate = update(config, PowerFlowStrings.PV4)
                )
            }
        }

        Text("If you have multiple sets of solar panels, e.g. front/rear of your home, this will let you see the power being generated by each set. Setting takes effect on next data fetch.")
    }
}

@Composable
private fun update(config: ConfigManaging, string: PowerFlowStrings): (Boolean) -> Unit = {
    val temp = config.enabledPowerFlowStrings
    temp.toggle(string)
    config.enabledPowerFlowStrings = temp
}

@Preview
@Composable
fun SolarStringsSettingsPreview() {
    SolarStringsSettingsView(config = FakeConfigManager())
}